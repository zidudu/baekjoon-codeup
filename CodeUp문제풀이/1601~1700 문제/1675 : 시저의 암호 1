#define _CRT_SECURE_NO_WARNINGS_
#include <stdio.h>
//다시 한번 풀어보기!
int main() {
	//문자
	char ch = 0;
	//변형 문자
	char change_ch;
	while ((ch = getchar()) != EOF) {
		//공백일땐 change_ch를 공백으로 만듬
		if (ch == ' ') change_ch = ' ';
		//a,b,c인 경우 -3을 하면 ^,_,`가 나와서 이 값들에 23을 더해 x,y,z가 나오게 함
		else if (ch >= 97 && ch <= 99) {
			change_ch = ch + 23;
			//printf("change_ch 값 : %c %d", change_ch, change_ch);
		}
		//d~z까지는 -3을 함
		else change_ch = ch - 3; //값에서 변형하여 저장
		//출력
		printf("%c", change_ch);
	}
	
	return 0;
	//해결점: 1. ch=getchar()에서 이것을 가로로 묶어야만 이 계산 결과값이 참인지 거짓인지 확실히 판별 가능
			// 2. if 와 else if에서 ch>=97 구문에 else if가 아닌 if를 씀. 즉, 공백일때 첫 if문을 수행한 다음, 그다음 if문도 실행해서 else에서 -3을하게되버림.
			// 3. char ch 에서 ch를 아무 값이라도 초기화 해놓는게 좋음.
			// 4. 메모리 초과는 주석때문에 생김...코드 제출할땐 쓸데없는 주석은 제거하고 보내자.


	//while(ch = getchar() !=EOF)
	//{		
	//	//ch가 공백문자가 아닌 경우
	//	if (ch == ' ') change_ch = ' ';// 문자값에 3을 더해 변형하여 change_ch 변수에 넣음
	//	//else if (ch == '\n') change_ch = '\n';
	//	else  change_ch = ch - 3;
	//	//출력
	//	printf("%c", change_ch);
	//}
	//return 0;






	//=> 이건 출력한계초과 가 뜸 160mb~180mb가 뜸. 이유는 모르겠지만 아마 getchar에서 버퍼가 남아있어서가 아닐까 추측
	//while(ch = getchar() !='\n')
	//{		
	//	//ch가 공백문자가 아닌 경우
	//	if (ch != ' ') ch = ch - 3; // 문자값에 3을 더해 변형하여 change_ch 변수에 넣음
	//	else ch = ' ';
	//	//출력
	//	printf("%c", ch);
	//}
}
/*
암호학에서 시저 암호(Caesar cipher)는 가장 오래된 암호 중 하나이고, 가장 대표적인 대치(substitution) 암호로서 평문 문자를 다른 문자로 일대일 대응시켜 암호문을 만들어 낸다.



시저 암호는 알파벳을 3글자씩 밀려서 쓰면서 문장을 만들었다. 실제 시저는 부하인 브루투스에게 암살되기 전에 키케로에게 다음과 같은 암호문을 보냈다고 한다.
암호문을 원문으로 바꾸는 원리는 간단하다. 암호문에 쓰인 알파벳보다 3만큼 이동한 알파벳으로 치환하면 된다.
시저의 암호문이 입력되면 원문으로 복원하는 프로그램을 작성하시오.



입력
공백이 있는 영어 문자열이 최대 200글자 입력된다. 단, 공백과 알파벳 소문자외에 다른 문자는 입력되지 않는다.

출력
암호문을 원문으로 복원하여 출력하시오.
*/


