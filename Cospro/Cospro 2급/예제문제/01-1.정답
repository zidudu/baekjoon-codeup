#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>
/*
라미는 주어진 N개의 자연수를 오름차순으로 정렬한 후에 인덱스가 M의 배수인 원소의 합을 구해
오라는 과제를 받았습니다. 그래서 라미는 선택 정렬 방법으로 주어진 N개의 자연수를 정렬한 후에,
M의 배수 인덱스에 있는 숫자의 합을 구하려고 합니다. 단, 배수 인덱스 중 0은 제외합니다.

예를 들어, 주어진 배열이 [ 4, 2, 1, 3, 9, 5, 6 ] 이고 M이 3인 경우, 배열을 오름차순으로 정렬하면 그
결과는 [ 1, 2, 3, 4, 5, 6, 9 ] 가 되고, 그 중에 인덱스가 3의 배수인 숫자는 [ 4, 9 ] 가 됩니다. 마지막
으로 그 합을 구하면 답은 13이 됩니다.




N 개의 자연수가 담긴 배열 arr 과 arr의 크기 N, 자연수 M의 배수인 원소의 합을 return 하도록
solution 함수를 작성하려 합니다. 주어진 코드에서 잘못된 한 줄을 고쳐 solution 함수가 주어진 arr
배열에 대해 올바른 answer를 리턴 시킬 수 있도록 해주세요.


*/
int solution(int arr[], int arr_len, int N, int M) {

	int answer = 0;
	//작은 값부터 정렬하는 선택정렬방식
	for (int i = 0; i < N - 1; i++) {
		int min_idx = i;

		for (int j = i + 1; j < N; j++) {
			if (arr[j] < arr[min_idx]) {  //*오류부분*. arr[j]이 arr[min_idx]보다 작으면 min_idx를 j로 바꿔주는 거임. 
											//그래야 현재 min_idx에 있는 값보다 j에 있는 값이 작아지기 때문  
				//
				min_idx = j;
			}
		}
		int temp = arr[i];
		arr[i] = arr[min_idx];
		arr[min_idx] = temp;
	}

	// M의 값에 해당하는 값이 있다면, 즉 인덱스의 3의 배수를 찾는 문제
	for (int i = 1; i < N; i++) { //즉 i는 1~7까지 반복함.
		if (i % M == 0) {  //*오류부분인줄 알았으나 이게 인덱스가 3의 배수인 숫자를 찾아 합 구하는 문제였음
			answer += arr[i]; //그래서 인덱스 값을 for로 돌리고 그걸 M으로 나눈 나머지가 0이 나온다면 그건 3의 배수이니
								//그에 해당하는 arr 인덱스 값을 answer에 더함.
		}
	}

	return answer;
}

// 아래는 테스트케이스 출력을 해보기 위한 main 함수입니다. 아래에는 잘못된 부분이 없으니 위의 코드만 수정하세요.

int main() {

	int arr1[] = { 4,2,1,3,9,5,6 };  //정렬 후 => 1,2,3,4,5,6,9 가 됨. 그리고 M1은 3이니 answer => 3+6+9 = 18
	int arr1_len = 7;
	int N1 = arr1_len;
	int M1 = 3;
	int ret1 = solution(arr1, arr1_len, N1, M1);
	// [실행] 버튼을 누르면 출력 값을 볼 수 있습니다.
	printf("solution 함수의 반환 값은 %d입니다.\n", ret1); // 18

	int arr2[] = { 7,6,5,4,3,2,1 };
	int arr2_len = 7;
	int N2 = arr2_len;
	int M2 = 3;
	int ret2 = solution(arr2, arr2_len, N2, M2);
	// [실행] 버튼을 누르면 출력 값을 볼 수 있습니다.
	printf("solution 함수의 반환 값은 %d입니다.\n", ret2);  // answer = 3+6=9

	int arr3[] = { 8,6,3,3,4,1,5,7 };
	int arr3_len = 8;
	int N3 = arr3_len;
	int M3 = 2;
	int ret3 = solution(arr3, arr3_len, N3, M3);
	// [실행] 버튼을 누르면 출력 값을 볼 수 있습니다.
	printf("solution 함수의 반환 값은 %d입니다.\n", ret3); // answer = 4 + 6+8  = 18

}
