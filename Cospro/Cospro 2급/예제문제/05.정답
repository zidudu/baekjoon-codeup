#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

int solution(int arr[], int arr_len, int N, int M) { // N = 6, M =3
	int min_sum = 50000; //최솟값 총합
	int max_sum = 0; //최댓값 총합

	//처음부터 끝까지의 선택된 범위를 더하여 거기에서 최솟값과 최댓값을 구함
	for (int i = 0; i < N - M + 1; i++) { // N - M + 1을 한 이유는 인덱스가 선택하는 범위값에서 그 뒤는 선택을 못하니까
		int temp_max = 0; // 최댓값 초기화
		//i부터 선택하는 범위까지 즉 0~3까지
		for (int j = i; j < i + M; j++) {
			temp_max += arr[j]; // 최댓값을 더함
		}
		//최댓값보다 클때
		if (temp_max > max_sum ) {
			max_sum = temp_max;
		}
		//최솟값보다 작을때
		if (temp_max < min_sum ) {
			min_sum = temp_max;
		}
	}

	return max_sum - min_sum;
}
/*
solution 함수의 반환 값은 13입니다.
solution 함수의 반환 값은 12입니다.
solution 함수의 반환 값은 8입니다.
*/
int main() {

	int arr1[] = { 3,1,1,4,5,9 };
	int arr1_len = 6;
	int N1 = 6;
	int M1 = 3;
	int ret1 = solution(arr1, arr1_len, N1, M1);
	// [실행] 버튼을 누르면 출력 값을 볼 수 있습니다.
	printf("solution 함수의 반환 값은 %d입니다.\n", ret1);

	int arr2[] = { 3,1,1,4,5,9 };
	int arr2_len = 6;
	int N2 = 6;
	int M2 = 2;
	int ret2 = solution(arr2, arr2_len, N2, M2);
	// [실행] 버튼을 누르면 출력 값을 볼 수 있습니다.
	printf("solution 함수의 반환 값은 %d입니다.\n", ret2);

	int arr3[] = { 1,2,3,4,5,6 };
	int arr3_len = 6;
	int N3 = 6;
	int M3 = 4;
	int ret3 = solution(arr3, arr3_len, N3, M3);
	// [실행] 버튼을 누르면 출력 값을 볼 수 있습니다.
	printf("solution 함수의 반환 값은 %d입니다.\n", ret3);

}
